{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Programming\\\\Tasleeha-Dashboard\\\\contexts\\\\HelperContext.js\";\nimport { API } from \"helper/CONST\";\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\"; // create new react context and export it\n\nconst HelperContext = /*#__PURE__*/React.createContext();\nexport default HelperContext;\nexport const HelperContextProvider = ({\n  children\n}) => {\n  // create new states\n  const {\n    0: categories,\n    1: setCategories\n  } = useState({\n    product: [],\n    service: [],\n    all: [],\n    parents: [],\n    childrens: []\n  });\n\n  const getChildrenCategory = (id, cats) => {\n    if (cats) {\n      if (id === \"-1\") return cats.childrens;else return cats.childrens.filter(i => i.parent_id == id);\n    } else {\n      if (id === \"-1\") return categories.childrens;else return categories.childrens.filter(i => i.parent_id == id);\n    }\n  };\n\n  const getCategories = async id => {\n    try {\n      const res = await Axios({\n        baseURL: API,\n        url: \"/categories/getAll\",\n        method: \"GET\"\n      });\n      let values = res.data.data;\n      let cats = {\n        all: values,\n        parents: values.filter(i => !i.parent_id),\n        childrens: values.filter(i => i.parent_id),\n        product: values.filter(i => i.type === \"product\"),\n        service: values.filter(i => i.type === \"service\")\n      };\n      setCategories(cats);\n      return getChildrenCategory(id, cats);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getCategories();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // return provider of the context with value object to be used wih all children components\n    _jsxDEV(HelperContext.Provider, {\n      value: {\n        categories,\n        setCategories,\n        getCategories,\n        getChildrenCategory\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)\n  );\n};","map":{"version":3,"sources":["D:/Programming/Tasleeha-Dashboard/contexts/HelperContext.js"],"names":["API","React","useState","useEffect","Axios","HelperContext","createContext","HelperContextProvider","children","categories","setCategories","product","service","all","parents","childrens","getChildrenCategory","id","cats","filter","i","parent_id","getCategories","res","baseURL","url","method","values","data","type","error","console","log"],"mappings":";;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,aAAa,gBAAGJ,KAAK,CAACK,aAAN,EAAtB;AACA,eAAeD,aAAf;AAEA,OAAO,MAAME,qBAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACrD;AACA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BR,QAAQ,CAAC;AAC3CS,IAAAA,OAAO,EAAE,EADkC;AAE3CC,IAAAA,OAAO,EAAE,EAFkC;AAG3CC,IAAAA,GAAG,EAAE,EAHsC;AAI3CC,IAAAA,OAAO,EAAE,EAJkC;AAK3CC,IAAAA,SAAS,EAAE;AALgC,GAAD,CAA5C;;AAOA,QAAMC,mBAAmB,GAAG,CAACC,EAAD,EAAKC,IAAL,KAAc;AACxC,QAAIA,IAAJ,EAAU;AACR,UAAID,EAAE,KAAK,IAAX,EAAiB,OAAOC,IAAI,CAACH,SAAZ,CAAjB,KACK,OAAOG,IAAI,CAACH,SAAL,CAAeI,MAAf,CAAuBC,CAAD,IAAOA,CAAC,CAACC,SAAF,IAAeJ,EAA5C,CAAP;AACN,KAHD,MAGO;AACL,UAAIA,EAAE,KAAK,IAAX,EAAiB,OAAOR,UAAU,CAACM,SAAlB,CAAjB,KACK,OAAON,UAAU,CAACM,SAAX,CAAqBI,MAArB,CAA6BC,CAAD,IAAOA,CAAC,CAACC,SAAF,IAAeJ,EAAlD,CAAP;AACN;AACF,GARD;;AASA,QAAMK,aAAa,GAAG,MAAOL,EAAP,IAAc;AAClC,QAAI;AACF,YAAMM,GAAG,GAAG,MAAMnB,KAAK,CAAC;AACtBoB,QAAAA,OAAO,EAAExB,GADa;AAEtByB,QAAAA,GAAG,EAAE,oBAFiB;AAGtBC,QAAAA,MAAM,EAAE;AAHc,OAAD,CAAvB;AAKA,UAAIC,MAAM,GAAGJ,GAAG,CAACK,IAAJ,CAASA,IAAtB;AACA,UAAIV,IAAI,GAAG;AACTL,QAAAA,GAAG,EAAEc,MADI;AAETb,QAAAA,OAAO,EAAEa,MAAM,CAACR,MAAP,CAAeC,CAAD,IAAO,CAACA,CAAC,CAACC,SAAxB,CAFA;AAGTN,QAAAA,SAAS,EAAEY,MAAM,CAACR,MAAP,CAAeC,CAAD,IAAOA,CAAC,CAACC,SAAvB,CAHF;AAITV,QAAAA,OAAO,EAAEgB,MAAM,CAACR,MAAP,CAAeC,CAAD,IAAOA,CAAC,CAACS,IAAF,KAAW,SAAhC,CAJA;AAKTjB,QAAAA,OAAO,EAAEe,MAAM,CAACR,MAAP,CAAeC,CAAD,IAAOA,CAAC,CAACS,IAAF,KAAW,SAAhC;AALA,OAAX;AAOAnB,MAAAA,aAAa,CAACQ,IAAD,CAAb;AACA,aAAOF,mBAAmB,CAACC,EAAD,EAAKC,IAAL,CAA1B;AACD,KAhBD,CAgBE,OAAOY,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GApBD;;AAsBA3B,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA;AAAA;AACE;AACA,YAAC,aAAD,CAAe,QAAf;AACE,MAAA,KAAK,EAAE;AACLb,QAAAA,UADK;AAELC,QAAAA,aAFK;AAGLY,QAAAA,aAHK;AAILN,QAAAA;AAJK,OADT;AAAA,gBAQGR;AARH;AAAA;AAAA;AAAA;AAAA;AAFF;AAaD,CAzDM","sourcesContent":["import { API } from \"helper/CONST\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\n// create new react context and export it\r\nconst HelperContext = React.createContext();\r\nexport default HelperContext;\r\n\r\nexport const HelperContextProvider = ({ children }) => {\r\n  // create new states\r\n  const [categories, setCategories] = useState({\r\n    product: [],\r\n    service: [],\r\n    all: [],\r\n    parents: [],\r\n    childrens: [],\r\n  });\r\n  const getChildrenCategory = (id, cats) => {\r\n    if (cats) {\r\n      if (id === \"-1\") return cats.childrens;\r\n      else return cats.childrens.filter((i) => i.parent_id == id);\r\n    } else {\r\n      if (id === \"-1\") return categories.childrens;\r\n      else return categories.childrens.filter((i) => i.parent_id == id);\r\n    }\r\n  };\r\n  const getCategories = async (id) => {\r\n    try {\r\n      const res = await Axios({\r\n        baseURL: API,\r\n        url: \"/categories/getAll\",\r\n        method: \"GET\",\r\n      });\r\n      let values = res.data.data;\r\n      let cats = {\r\n        all: values,\r\n        parents: values.filter((i) => !i.parent_id),\r\n        childrens: values.filter((i) => i.parent_id),\r\n        product: values.filter((i) => i.type === \"product\"),\r\n        service: values.filter((i) => i.type === \"service\"),\r\n      };\r\n      setCategories(cats);\r\n      return getChildrenCategory(id, cats);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCategories();\r\n  }, []);\r\n\r\n  return (\r\n    // return provider of the context with value object to be used wih all children components\r\n    <HelperContext.Provider\r\n      value={{\r\n        categories,\r\n        setCategories,\r\n        getCategories,\r\n        getChildrenCategory,\r\n      }}\r\n    >\r\n      {children}\r\n    </HelperContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}