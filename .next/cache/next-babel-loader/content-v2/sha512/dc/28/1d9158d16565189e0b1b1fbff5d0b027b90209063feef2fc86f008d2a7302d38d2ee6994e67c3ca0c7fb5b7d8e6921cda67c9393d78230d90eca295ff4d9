{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hossam/work/tasleeha-dashboard/components/PagesCards/NotificationCard.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from \"react\";\nimport ImagePicker from \"@/components/ImagePicker\";\nimport FormInput from \"@/components/FormInput\";\nimport Card from \"@/components/Card\";\nimport { EMPTY_NOTIFICATION } from \"helper/CONST\";\nimport FormSelect2 from \"../FormSelect2\";\nimport ButtonLoader from \"../ButtonLoader\";\nimport MainCardBody from \"./MainCardBody\";\nimport isMissingSomething from \"helper/isMissingSomething\";\n\nconst NotificationCard = ({\n  item,\n  handleDelete,\n  handleEdit,\n  handleAdd,\n  loader\n}) => {\n  const {\n    0: info,\n    1: setInfo\n  } = useState(_objectSpread({}, EMPTY_NOTIFICATION));\n  useEffect(() => {\n    if (item) setInfo(_objectSpread({}, item));\n  }, []);\n\n  const handleChange = (id, value) => {\n    setInfo(_objectSpread(_objectSpread({}, info), {}, {\n      [id]: value\n    }));\n  };\n\n  console.log(info);\n  const onHandleEdit = handleEdit ? () => {\n    if (!isMissingSomething(info)) handleEdit(info);\n  } : null;\n  const onHandleAdd = handleAdd ? () => {\n    // const formdata = new FormData();\n    // formdata.append(\"full_name\", info.full_name);\n    // formdata.append(\"address\", info.address);\n    // formdata.append(\"city\", info.city);\n    // formdata.append(\"phone\", info.phone);\n    // formdata.append(\"region\", info.region);\n    if (!isMissingSomething(info)) handleAdd(info);\n  } : null;\n  return /*#__PURE__*/_jsxDEV(MainCardBody, {\n    handleAdd: onHandleAdd,\n    handleEdit: onHandleEdit,\n    handleDelete: handleDelete,\n    item: item ? item : null,\n    loader: loader,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col space-y-8\",\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        required: true,\n        name: \"\\u0627\\u0644\\u0627\\u0633\\u0645\",\n        value: info[\"title\"],\n        changeVlaue: v => handleChange(\"title\", v)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        required: true,\n        name: \"\\u0627\\u0644\\u0645\\u062D\\u062A\\u0648\\u064A\",\n        value: info[\"body\"],\n        changeVlaue: v => handleChange(\"body\", v),\n        type: \"textarea\",\n        rows: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\nexport default NotificationCard;","map":{"version":3,"sources":["/Users/hossam/work/tasleeha-dashboard/components/PagesCards/NotificationCard.jsx"],"names":["React","useEffect","useState","ImagePicker","FormInput","Card","EMPTY_NOTIFICATION","FormSelect2","ButtonLoader","MainCardBody","isMissingSomething","NotificationCard","item","handleDelete","handleEdit","handleAdd","loader","info","setInfo","handleChange","id","value","console","log","onHandleEdit","onHandleAdd","v"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,kBAAT,QAAmC,cAAnC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AACxBC,EAAAA,IADwB;AAExBC,EAAAA,YAFwB;AAGxBC,EAAAA,UAHwB;AAIxBC,EAAAA,SAJwB;AAKxBC,EAAAA;AALwB,CAAD,KAMnB;AACJ,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBhB,QAAQ,mBAAMI,kBAAN,EAAhC;AACAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,IAAJ,EAAUM,OAAO,mBAAMN,IAAN,EAAP;AACX,GAFQ,EAEN,EAFM,CAAT;;AAGA,QAAMO,YAAY,GAAG,CAACC,EAAD,EAAKC,KAAL,KAAe;AAClCH,IAAAA,OAAO,iCAAMD,IAAN;AAAY,OAACG,EAAD,GAAMC;AAAlB,OAAP;AACD,GAFD;;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,QAAMO,YAAY,GAAGV,UAAU,GAC3B,MAAM;AACJ,QAAI,CAACJ,kBAAkB,CAACO,IAAD,CAAvB,EAA+BH,UAAU,CAACG,IAAD,CAAV;AAChC,GAH0B,GAI3B,IAJJ;AAKA,QAAMQ,WAAW,GAAGV,SAAS,GACzB,MAAM;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,QAAI,CAACL,kBAAkB,CAACO,IAAD,CAAvB,EAA+BF,SAAS,CAACE,IAAD,CAAT;AAChC,GATwB,GAUzB,IAVJ;AAWA,sBACE,QAAC,YAAD;AACE,IAAA,SAAS,EAAEQ,WADb;AAEE,IAAA,UAAU,EAAED,YAFd;AAGE,IAAA,YAAY,EAAEX,YAHhB;AAIE,IAAA,IAAI,EAAED,IAAI,GAAGA,IAAH,GAAU,IAJtB;AAKE,IAAA,MAAM,EAAEI,MALV;AAAA,2BAOE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,QAAQ,EAAE,IADZ;AAEE,QAAA,IAAI,EAAC,gCAFP;AAGE,QAAA,KAAK,EAAEC,IAAI,CAAC,OAAD,CAHb;AAIE,QAAA,WAAW,EAAGS,CAAD,IAAOP,YAAY,CAAC,OAAD,EAAUO,CAAV;AAJlC;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,SAAD;AACE,QAAA,QAAQ,EAAE,IADZ;AAEE,QAAA,IAAI,EAAC,4CAFP;AAGE,QAAA,KAAK,EAAET,IAAI,CAAC,MAAD,CAHb;AAIE,QAAA,WAAW,EAAGS,CAAD,IAAOP,YAAY,CAAC,MAAD,EAASO,CAAT,CAJlC;AAKE,QAAA,IAAI,EAAC,UALP;AAME,QAAA,IAAI,EAAE;AANR;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAzDD;;AA2DA,eAAef,gBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ImagePicker from \"@/components/ImagePicker\";\nimport FormInput from \"@/components/FormInput\";\nimport Card from \"@/components/Card\";\nimport { EMPTY_NOTIFICATION } from \"helper/CONST\";\nimport FormSelect2 from \"../FormSelect2\";\nimport ButtonLoader from \"../ButtonLoader\";\nimport MainCardBody from \"./MainCardBody\";\nimport isMissingSomething from \"helper/isMissingSomething\";\n\nconst NotificationCard = ({\n  item,\n  handleDelete,\n  handleEdit,\n  handleAdd,\n  loader,\n}) => {\n  const [info, setInfo] = useState({ ...EMPTY_NOTIFICATION });\n  useEffect(() => {\n    if (item) setInfo({ ...item });\n  }, []);\n  const handleChange = (id, value) => {\n    setInfo({ ...info, [id]: value });\n  };\n  console.log(info);\n  const onHandleEdit = handleEdit\n    ? () => {\n        if (!isMissingSomething(info)) handleEdit(info);\n      }\n    : null;\n  const onHandleAdd = handleAdd\n    ? () => {\n        // const formdata = new FormData();\n        // formdata.append(\"full_name\", info.full_name);\n        // formdata.append(\"address\", info.address);\n        // formdata.append(\"city\", info.city);\n        // formdata.append(\"phone\", info.phone);\n        // formdata.append(\"region\", info.region);\n        if (!isMissingSomething(info)) handleAdd(info);\n      }\n    : null;\n  return (\n    <MainCardBody\n      handleAdd={onHandleAdd}\n      handleEdit={onHandleEdit}\n      handleDelete={handleDelete}\n      item={item ? item : null}\n      loader={loader}\n    >\n      <div className=\"flex flex-col space-y-8\">\n        <FormInput\n          required={true}\n          name=\"الاسم\"\n          value={info[\"title\"]}\n          changeVlaue={(v) => handleChange(\"title\", v)}\n        />\n        <FormInput\n          required={true}\n          name=\"المحتوي\"\n          value={info[\"body\"]}\n          changeVlaue={(v) => handleChange(\"body\", v)}\n          type=\"textarea\"\n          rows={10}\n        />\n      </div>\n    </MainCardBody>\n  );\n};\n\nexport default NotificationCard;\n"]},"metadata":{},"sourceType":"module"}