{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { API } from \"helper/CONST\";\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\"; // create new react context and export it\n\nvar HelperContext = /*#__PURE__*/React.createContext();\nexport default HelperContext;\nexport var HelperContextProvider = function HelperContextProvider(_ref) {\n  var children = _ref.children;\n\n  // create new states\n  var _useState = useState({\n    product: [],\n    service: [],\n    all: []\n  }),\n      categories = _useState[0],\n      setCategories = _useState[1];\n\n  var getCategories = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res, values, cat;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return Axios({\n                baseURL: API,\n                url: \"/categories/getAll\",\n                method: \"GET\"\n              });\n\n            case 3:\n              res = _context.sent;\n              values = res.data.data;\n              cat = {\n                all: values.filter(function (i) {\n                  return i.parent_id;\n                }),\n                product: values.filter(function (i) {\n                  return i.type === \"product\";\n                }),\n                service: values.filter(function (i) {\n                  return i.type === \"service\";\n                })\n              };\n              setCategories(cat);\n              return _context.abrupt(\"return\", cat);\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function getCategories() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getCategories();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // return provider of the context with value object to be used wih all children components\n    _jsx(HelperContext.Provider, {\n      value: {\n        categories: categories,\n        setCategories: setCategories,\n        getCategories: getCategories\n      },\n      children: children\n    })\n  );\n};","map":null,"metadata":{},"sourceType":"module"}