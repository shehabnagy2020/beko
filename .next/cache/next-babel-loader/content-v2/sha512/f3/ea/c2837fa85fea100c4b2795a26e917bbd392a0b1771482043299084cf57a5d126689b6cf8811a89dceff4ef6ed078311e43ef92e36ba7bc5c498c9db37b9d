{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Programming\\\\Tasleeha-Dashboard\\\\contexts\\\\HelperContext.js\";\nimport { API } from \"helper/CONST\";\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\"; // create new react context and export it\n\nconst HelperContext = /*#__PURE__*/React.createContext();\nexport default HelperContext;\nexport const HelperContextProvider = ({\n  children\n}) => {\n  // create new states\n  const {\n    0: categories,\n    1: setCategories\n  } = useState({\n    product: [],\n    service: [],\n    all: []\n  });\n\n  const getCategories = async (values = []) => {\n    try {\n      if (values.length <= 0) {\n        values = await Axios({\n          baseURL: API,\n          url: \"/api/categories/getAll\",\n          method: \"GET\"\n        });\n        values = values.data.data;\n      }\n\n      let all = [],\n          product = [],\n          service = [];\n      let cat = values.map(c => {\n        // c.image = c.image.includes(\"https://\") ? c.image : API + \"/\" + c.image;\n        if (c.type == \"product\") product.push(c);else service.push(c);\n        all.push(c);\n      }); // let cat = {\n      //   all: values.filter((i) => i.parent_id),\n      //   product: values.filter((i) => i.type === \"product\"),\n      //   service: values.filter((i) => i.type === \"service\"),\n      // };\n\n      console.log(all);\n      setCategories({\n        all,\n        product,\n        service\n      });\n      return {\n        all,\n        product,\n        service\n      };\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getCategories();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // return provider of the context with value object to be used wih all children components\n    _jsxDEV(HelperContext.Provider, {\n      value: {\n        categories,\n        setCategories,\n        getCategories\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)\n  );\n};","map":{"version":3,"sources":["D:/Programming/Tasleeha-Dashboard/contexts/HelperContext.js"],"names":["API","React","useState","useEffect","Axios","HelperContext","createContext","HelperContextProvider","children","categories","setCategories","product","service","all","getCategories","values","length","baseURL","url","method","data","cat","map","c","type","push","console","log","error"],"mappings":";;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,aAAa,gBAAGJ,KAAK,CAACK,aAAN,EAAtB;AACA,eAAeD,aAAf;AAEA,OAAO,MAAME,qBAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACrD;AACA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BR,QAAQ,CAAC;AAC3CS,IAAAA,OAAO,EAAE,EADkC;AAE3CC,IAAAA,OAAO,EAAE,EAFkC;AAG3CC,IAAAA,GAAG,EAAE;AAHsC,GAAD,CAA5C;;AAMA,QAAMC,aAAa,GAAG,OAAOC,MAAM,GAAG,EAAhB,KAAuB;AAC3C,QAAI;AACF,UAAIA,MAAM,CAACC,MAAP,IAAiB,CAArB,EAAwB;AACtBD,QAAAA,MAAM,GAAG,MAAMX,KAAK,CAAC;AACnBa,UAAAA,OAAO,EAAEjB,GADU;AAEnBkB,UAAAA,GAAG,EAAE,wBAFc;AAGnBC,UAAAA,MAAM,EAAE;AAHW,SAAD,CAApB;AAKAJ,QAAAA,MAAM,GAAGA,MAAM,CAACK,IAAP,CAAYA,IAArB;AACD;;AACD,UAAIP,GAAG,GAAG,EAAV;AAAA,UACEF,OAAO,GAAG,EADZ;AAAA,UAEEC,OAAO,GAAG,EAFZ;AAGA,UAAIS,GAAG,GAAGN,MAAM,CAACO,GAAP,CAAYC,CAAD,IAAO;AAC1B;AACA,YAAIA,CAAC,CAACC,IAAF,IAAU,SAAd,EAAyBb,OAAO,CAACc,IAAR,CAAaF,CAAb,EAAzB,KACKX,OAAO,CAACa,IAAR,CAAaF,CAAb;AACLV,QAAAA,GAAG,CAACY,IAAJ,CAASF,CAAT;AACD,OALS,CAAV,CAZE,CAkBF;AACA;AACA;AACA;AACA;;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYd,GAAZ;AACAH,MAAAA,aAAa,CAAC;AAAEG,QAAAA,GAAF;AAAOF,QAAAA,OAAP;AAAgBC,QAAAA;AAAhB,OAAD,CAAb;AACA,aAAO;AAAEC,QAAAA,GAAF;AAAOF,QAAAA,OAAP;AAAgBC,QAAAA;AAAhB,OAAP;AACD,KA1BD,CA0BE,OAAOgB,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF,GA9BD;;AAgCAzB,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA;AAAA;AACE;AACA,YAAC,aAAD,CAAe,QAAf;AACE,MAAA,KAAK,EAAE;AACLL,QAAAA,UADK;AAELC,QAAAA,aAFK;AAGLI,QAAAA;AAHK,OADT;AAAA,gBAOGN;AAPH;AAAA;AAAA;AAAA;AAAA;AAFF;AAYD,CAxDM","sourcesContent":["import { API } from \"helper/CONST\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\n// create new react context and export it\r\nconst HelperContext = React.createContext();\r\nexport default HelperContext;\r\n\r\nexport const HelperContextProvider = ({ children }) => {\r\n  // create new states\r\n  const [categories, setCategories] = useState({\r\n    product: [],\r\n    service: [],\r\n    all: [],\r\n  });\r\n\r\n  const getCategories = async (values = []) => {\r\n    try {\r\n      if (values.length <= 0) {\r\n        values = await Axios({\r\n          baseURL: API,\r\n          url: \"/api/categories/getAll\",\r\n          method: \"GET\",\r\n        });\r\n        values = values.data.data;\r\n      }\r\n      let all = [],\r\n        product = [],\r\n        service = [];\r\n      let cat = values.map((c) => {\r\n        // c.image = c.image.includes(\"https://\") ? c.image : API + \"/\" + c.image;\r\n        if (c.type == \"product\") product.push(c);\r\n        else service.push(c);\r\n        all.push(c);\r\n      });\r\n      // let cat = {\r\n      //   all: values.filter((i) => i.parent_id),\r\n      //   product: values.filter((i) => i.type === \"product\"),\r\n      //   service: values.filter((i) => i.type === \"service\"),\r\n      // };\r\n      console.log(all);\r\n      setCategories({ all, product, service });\r\n      return { all, product, service };\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCategories();\r\n  }, []);\r\n\r\n  return (\r\n    // return provider of the context with value object to be used wih all children components\r\n    <HelperContext.Provider\r\n      value={{\r\n        categories,\r\n        setCategories,\r\n        getCategories,\r\n      }}\r\n    >\r\n      {children}\r\n    </HelperContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}