{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/hossam/work/tasleeha-dashboard/contexts/HelperContext.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { API } from \"helper/CONST\";\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\"; // create new react context and export it\n\nvar HelperContext = /*#__PURE__*/React.createContext();\nexport default HelperContext;\nexport var HelperContextProvider = function HelperContextProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  // create new states\n  var _useState = useState({\n    product: [],\n    service: [],\n    all: []\n  }),\n      categories = _useState[0],\n      setCategories = _useState[1];\n\n  var getCategories = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var values,\n          all,\n          product,\n          service,\n          cat,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              values = _args.length > 0 && _args[0] !== undefined ? _args[0] : [];\n              _context.prev = 1;\n\n              if (!(values.length <= 0)) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 5;\n              return Axios({\n                baseURL: API,\n                url: \"/api/categories/getAll\",\n                method: \"GET\"\n              });\n\n            case 5:\n              values = _context.sent;\n              values = values.data.data;\n\n            case 7:\n              all = [], product = [], service = [];\n              cat = values.map(function (c) {\n                if (c.parent_id) all.push(c);\n                if (c.type === \"product\" && c.parent_id) product.push(c);else if (c.type === \"service\" && c.parent_id) service.push(c);\n              });\n              setCategories({\n                all: all,\n                product: product,\n                service: service\n              });\n              return _context.abrupt(\"return\", {\n                all: all,\n                product: product,\n                service: service\n              });\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 13]]);\n    }));\n\n    return function getCategories() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getCategories();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // return provider of the context with value object to be used wih all children components\n    _jsxDEV(HelperContext.Provider, {\n      value: {\n        categories: categories,\n        setCategories: setCategories,\n        getCategories: getCategories\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, _this)\n  );\n};\n\n_s(HelperContextProvider, \"+e37evtkVJImhVdmwGNn+oBEP2k=\");\n\n_c = HelperContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"HelperContextProvider\");","map":{"version":3,"sources":["/Users/hossam/work/tasleeha-dashboard/contexts/HelperContext.js"],"names":["API","React","useState","useEffect","Axios","HelperContext","createContext","HelperContextProvider","children","product","service","all","categories","setCategories","getCategories","values","length","baseURL","url","method","data","cat","map","c","parent_id","push","type","console","log"],"mappings":";;;;;;;;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,IAAMC,aAAa,gBAAGJ,KAAK,CAACK,aAAN,EAAtB;AACA,eAAeD,aAAf;AAEA,OAAO,IAAME,qBAAqB,GAAG,SAAxBA,qBAAwB,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACrD;AADqD,kBAEjBN,QAAQ,CAAC;AAC3CO,IAAAA,OAAO,EAAE,EADkC;AAE3CC,IAAAA,OAAO,EAAE,EAFkC;AAG3CC,IAAAA,GAAG,EAAE;AAHsC,GAAD,CAFS;AAAA,MAE9CC,UAF8C;AAAA,MAElCC,aAFkC;;AAQrD,MAAMC,aAAa;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAOC,cAAAA,MAAP,2DAAgB,EAAhB;AAAA;;AAAA,oBAEdA,MAAM,CAACC,MAAP,IAAiB,CAFH;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAGDZ,KAAK,CAAC;AACnBa,gBAAAA,OAAO,EAAEjB,GADU;AAEnBkB,gBAAAA,GAAG,EAAE,wBAFc;AAGnBC,gBAAAA,MAAM,EAAE;AAHW,eAAD,CAHJ;;AAAA;AAGhBJ,cAAAA,MAHgB;AAQhBA,cAAAA,MAAM,GAAGA,MAAM,CAACK,IAAP,CAAYA,IAArB;;AARgB;AAUdT,cAAAA,GAVc,GAUR,EAVQ,EAWhBF,OAXgB,GAWN,EAXM,EAYhBC,OAZgB,GAYN,EAZM;AAadW,cAAAA,GAbc,GAaRN,MAAM,CAACO,GAAP,CAAW,UAACC,CAAD,EAAO;AAC1B,oBAAIA,CAAC,CAACC,SAAN,EAAiBb,GAAG,CAACc,IAAJ,CAASF,CAAT;AACjB,oBAAIA,CAAC,CAACG,IAAF,KAAW,SAAX,IAAwBH,CAAC,CAACC,SAA9B,EAAyCf,OAAO,CAACgB,IAAR,CAAaF,CAAb,EAAzC,KACK,IAAIA,CAAC,CAACG,IAAF,KAAW,SAAX,IAAwBH,CAAC,CAACC,SAA9B,EAAyCd,OAAO,CAACe,IAAR,CAAaF,CAAb;AAC/C,eAJS,CAbQ;AAkBlBV,cAAAA,aAAa,CAAC;AAAEF,gBAAAA,GAAG,EAAHA,GAAF;AAAOF,gBAAAA,OAAO,EAAPA,OAAP;AAAgBC,gBAAAA,OAAO,EAAPA;AAAhB,eAAD,CAAb;AAlBkB,+CAmBX;AAAEC,gBAAAA,GAAG,EAAHA,GAAF;AAAOF,gBAAAA,OAAO,EAAPA,OAAP;AAAgBC,gBAAAA,OAAO,EAAPA;AAAhB,eAnBW;;AAAA;AAAA;AAAA;AAqBlBiB,cAAAA,OAAO,CAACC,GAAR;;AArBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbd,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAyBAX,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA;AAAA;AACE;AACA,YAAC,aAAD,CAAe,QAAf;AACE,MAAA,KAAK,EAAE;AACLF,QAAAA,UAAU,EAAVA,UADK;AAELC,QAAAA,aAAa,EAAbA,aAFK;AAGLC,QAAAA,aAAa,EAAbA;AAHK,OADT;AAAA,gBAOGN;AAPH;AAAA;AAAA;AAAA;AAAA;AAFF;AAYD,CAjDM;;GAAMD,qB;;KAAAA,qB","sourcesContent":["import { API } from \"helper/CONST\";\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\n\n// create new react context and export it\nconst HelperContext = React.createContext();\nexport default HelperContext;\n\nexport const HelperContextProvider = ({ children }) => {\n  // create new states\n  const [categories, setCategories] = useState({\n    product: [],\n    service: [],\n    all: [],\n  });\n\n  const getCategories = async (values = []) => {\n    try {\n      if (values.length <= 0) {\n        values = await Axios({\n          baseURL: API,\n          url: \"/api/categories/getAll\",\n          method: \"GET\",\n        });\n        values = values.data.data;\n      }\n      let all = [],\n        product = [],\n        service = [];\n      let cat = values.map((c) => {\n        if (c.parent_id) all.push(c);\n        if (c.type === \"product\" && c.parent_id) product.push(c);\n        else if (c.type === \"service\" && c.parent_id) service.push(c);\n      });\n      setCategories({ all, product, service });\n      return { all, product, service };\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getCategories();\n  }, []);\n\n  return (\n    // return provider of the context with value object to be used wih all children components\n    <HelperContext.Provider\n      value={{\n        categories,\n        setCategories,\n        getCategories,\n      }}\n    >\n      {children}\n    </HelperContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}