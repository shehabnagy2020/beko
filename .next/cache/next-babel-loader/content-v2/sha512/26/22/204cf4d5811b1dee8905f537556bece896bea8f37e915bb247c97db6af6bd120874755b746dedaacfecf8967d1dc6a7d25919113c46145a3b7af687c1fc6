{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\Programming\\\\Tasleeha-Dashboard\\\\contexts\\\\HelperContext.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { API } from \"helper/CONST\";\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\"; // create new react context and export it\n\nvar HelperContext = /*#__PURE__*/React.createContext();\nexport default HelperContext;\nexport var HelperContextProvider = function HelperContextProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  // create new states\n  var _useState = useState({\n    product: [],\n    service: [],\n    all: []\n  }),\n      categories = _useState[0],\n      setCategories = _useState[1];\n\n  var getChildrenCategory = function getChildrenCategory(id, cats) {\n    if (cats) {\n      if (id === -1) return cats.childrens;else return cats.childrens.filter(function (i) {\n        return i.parent_id === id;\n      });\n    } else {\n      if (id === -1) return categories.childrens;else return categories.childrens.filter(function (i) {\n        return i.parent_id === id;\n      });\n    }\n  };\n\n  var getCategories = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n      var res, values, cat;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return Axios({\n                baseURL: API,\n                url: \"/categories/getAll\",\n                method: \"GET\"\n              });\n\n            case 3:\n              res = _context.sent;\n              values = res.data.data;\n              cat = {\n                all: values,\n                parents: values.filter(function (i) {\n                  return !i.parent_id;\n                }),\n                childrens: values.filter(function (i) {\n                  return i.parent_id;\n                }),\n                product: values.filter(function (i) {\n                  return i.type === \"product\";\n                }),\n                service: values.filter(function (i) {\n                  return i.type === \"service\";\n                })\n              };\n              setCategories(cat);\n              return _context.abrupt(\"return\", getChildrenCategory(id, cat));\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function getCategories(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getCategories();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // return provider of the context with value object to be used wih all children components\n    _jsxDEV(HelperContext.Provider, {\n      value: {\n        categories: categories,\n        setCategories: setCategories,\n        getCategories: getCategories,\n        getChildrenCategory: getChildrenCategory\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, _this)\n  );\n};\n\n_s(HelperContextProvider, \"B5RRDORwMCNwy8g//qm5NXOWsd0=\");\n\n_c = HelperContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"HelperContextProvider\");","map":{"version":3,"sources":["D:/Programming/Tasleeha-Dashboard/contexts/HelperContext.js"],"names":["API","React","useState","useEffect","Axios","HelperContext","createContext","HelperContextProvider","children","product","service","all","categories","setCategories","getChildrenCategory","id","cats","childrens","filter","i","parent_id","getCategories","baseURL","url","method","res","values","data","cat","parents","type","console","log"],"mappings":";;;;;;;;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,IAAMC,aAAa,gBAAGJ,KAAK,CAACK,aAAN,EAAtB;AACA,eAAeD,aAAf;AAEA,OAAO,IAAME,qBAAqB,GAAG,SAAxBA,qBAAwB,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACrD;AADqD,kBAEjBN,QAAQ,CAAC;AAC3CO,IAAAA,OAAO,EAAE,EADkC;AAE3CC,IAAAA,OAAO,EAAE,EAFkC;AAG3CC,IAAAA,GAAG,EAAE;AAHsC,GAAD,CAFS;AAAA,MAE9CC,UAF8C;AAAA,MAElCC,aAFkC;;AAOrD,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,EAAD,EAAKC,IAAL,EAAc;AACxC,QAAIA,IAAJ,EAAU;AACR,UAAID,EAAE,KAAK,CAAC,CAAZ,EAAe,OAAOC,IAAI,CAACC,SAAZ,CAAf,KACK,OAAOD,IAAI,CAACC,SAAL,CAAeC,MAAf,CAAsB,UAACC,CAAD;AAAA,eAAOA,CAAC,CAACC,SAAF,KAAgBL,EAAvB;AAAA,OAAtB,CAAP;AACN,KAHD,MAGO;AACL,UAAIA,EAAE,KAAK,CAAC,CAAZ,EAAe,OAAOH,UAAU,CAACK,SAAlB,CAAf,KACK,OAAOL,UAAU,CAACK,SAAX,CAAqBC,MAArB,CAA4B,UAACC,CAAD;AAAA,eAAOA,CAAC,CAACC,SAAF,KAAgBL,EAAvB;AAAA,OAA5B,CAAP;AACN;AACF,GARD;;AASA,MAAMM,aAAa;AAAA,yEAAG,iBAAON,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEAX,KAAK,CAAC;AACtBkB,gBAAAA,OAAO,EAAEtB,GADa;AAEtBuB,gBAAAA,GAAG,EAAE,oBAFiB;AAGtBC,gBAAAA,MAAM,EAAE;AAHc,eAAD,CAFL;;AAAA;AAEZC,cAAAA,GAFY;AAOdC,cAAAA,MAPc,GAOLD,GAAG,CAACE,IAAJ,CAASA,IAPJ;AAQdC,cAAAA,GARc,GAQR;AACRjB,gBAAAA,GAAG,EAAEe,MADG;AAERG,gBAAAA,OAAO,EAAEH,MAAM,CAACR,MAAP,CAAc,UAACC,CAAD;AAAA,yBAAO,CAACA,CAAC,CAACC,SAAV;AAAA,iBAAd,CAFD;AAGRH,gBAAAA,SAAS,EAAES,MAAM,CAACR,MAAP,CAAc,UAACC,CAAD;AAAA,yBAAOA,CAAC,CAACC,SAAT;AAAA,iBAAd,CAHH;AAIRX,gBAAAA,OAAO,EAAEiB,MAAM,CAACR,MAAP,CAAc,UAACC,CAAD;AAAA,yBAAOA,CAAC,CAACW,IAAF,KAAW,SAAlB;AAAA,iBAAd,CAJD;AAKRpB,gBAAAA,OAAO,EAAEgB,MAAM,CAACR,MAAP,CAAc,UAACC,CAAD;AAAA,yBAAOA,CAAC,CAACW,IAAF,KAAW,SAAlB;AAAA,iBAAd;AALD,eARQ;AAelBjB,cAAAA,aAAa,CAACe,GAAD,CAAb;AAfkB,+CAgBXd,mBAAmB,CAACC,EAAD,EAAKa,GAAL,CAhBR;;AAAA;AAAA;AAAA;AAkBlBG,cAAAA,OAAO,CAACC,GAAR;;AAlBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbX,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAsBAlB,EAAAA,SAAS,CAAC,YAAM;AACdkB,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA;AAAA;AACE;AACA,YAAC,aAAD,CAAe,QAAf;AACE,MAAA,KAAK,EAAE;AACLT,QAAAA,UAAU,EAAVA,UADK;AAELC,QAAAA,aAAa,EAAbA,aAFK;AAGLQ,QAAAA,aAAa,EAAbA,aAHK;AAILP,QAAAA,mBAAmB,EAAnBA;AAJK,OADT;AAAA,gBAQGN;AARH;AAAA;AAAA;AAAA;AAAA;AAFF;AAaD,CAvDM;;GAAMD,qB;;KAAAA,qB","sourcesContent":["import { API } from \"helper/CONST\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\n// create new react context and export it\r\nconst HelperContext = React.createContext();\r\nexport default HelperContext;\r\n\r\nexport const HelperContextProvider = ({ children }) => {\r\n  // create new states\r\n  const [categories, setCategories] = useState({\r\n    product: [],\r\n    service: [],\r\n    all: [],\r\n  });\r\n  const getChildrenCategory = (id, cats) => {\r\n    if (cats) {\r\n      if (id === -1) return cats.childrens;\r\n      else return cats.childrens.filter((i) => i.parent_id === id);\r\n    } else {\r\n      if (id === -1) return categories.childrens;\r\n      else return categories.childrens.filter((i) => i.parent_id === id);\r\n    }\r\n  };\r\n  const getCategories = async (id) => {\r\n    try {\r\n      const res = await Axios({\r\n        baseURL: API,\r\n        url: \"/categories/getAll\",\r\n        method: \"GET\",\r\n      });\r\n      let values = res.data.data;\r\n      let cat = {\r\n        all: values,\r\n        parents: values.filter((i) => !i.parent_id),\r\n        childrens: values.filter((i) => i.parent_id),\r\n        product: values.filter((i) => i.type === \"product\"),\r\n        service: values.filter((i) => i.type === \"service\"),\r\n      };\r\n      setCategories(cat);\r\n      return getChildrenCategory(id, cat);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCategories();\r\n  }, []);\r\n\r\n  return (\r\n    // return provider of the context with value object to be used wih all children components\r\n    <HelperContext.Provider\r\n      value={{\r\n        categories,\r\n        setCategories,\r\n        getCategories,\r\n        getChildrenCategory,\r\n      }}\r\n    >\r\n      {children}\r\n    </HelperContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}