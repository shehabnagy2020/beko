{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Programming\\\\Tasleeha\\\\contexts\\\\HelperContext.js\";\nimport { API } from \"helper/CONST\";\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\"; // create new react context and export it\n\nconst HelperContext = /*#__PURE__*/React.createContext();\nexport default HelperContext;\nexport const HelperContextProvider = ({\n  children\n}) => {\n  // create new states\n  const {\n    0: categories,\n    1: setCategories\n  } = useState({\n    product: [],\n    service: [],\n    all: []\n  });\n  const {\n    0: mainLoader,\n    1: setMainLoader\n  } = useState(false);\n  const {\n    0: ordersItems,\n    1: setOrdersItems\n  } = useState([]);\n  const {\n    0: newOrdersIndi,\n    1: setNewOrdersIndi\n  } = useState(false);\n\n  const getCategories = async (values = []) => {\n    try {\n      values = await Axios({\n        baseURL: API,\n        url: \"/api/categories/getAll\",\n        method: \"GET\",\n        params: {\n          nested: \"1\"\n        }\n      });\n      let all = [],\n          product = [],\n          service = [],\n          subs = [];\n      let cat = values.data.data.map(c => {\n        if (c.type === \"product\" && c.parent_id) product.push(c);else if (c.type === \"service\" && c.parent_id) service.push(c);\n        all.push(c);\n        subs.push(c.sub_categories);\n      });\n      console.log(all);\n      setCategories({\n        all,\n        product,\n        service,\n        subs\n      });\n      return {\n        all,\n        product,\n        service\n      };\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getOrders = async () => {\n    try {\n      const res = await Axios({\n        baseURL: API,\n        url: \"/api/orders/get\",\n        method: \"GET\"\n      });\n      let values = res.data.data;\n      let newValues = [];\n      let oldVals = localStorage.getItem(\"ordersIDs\") ? JSON.parse(localStorage.getItem(\"ordersIDs\")) : [];\n      values.map(order => {\n        var hasNullableProducts = false;\n        order.Order_Products.map(product => {\n          if (product.Product == null) hasNullableProducts = true;\n        });\n\n        if (hasNullableProducts == false && order.User != null) {\n          if (!oldVals.includes(order.id)) {\n            order.new = true;\n            oldVals.push(order.id);\n          }\n\n          newValues.push(order);\n        }\n      });\n      if (newValues[0].new) setNewOrdersIndi(true);\n      setOrdersItems([...newValues]);\n      localStorage.setItem(\"ordersIDs\", JSON.stringify(oldVals));\n    } catch (error) {}\n  };\n\n  const initailize = async () => {\n    setMainLoader(true);\n\n    try {\n      await getCategories();\n      await getOrders();\n      setMainLoader(false);\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  useEffect(() => {\n    initailize();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // return provider of the context with value object to be used wih all children components\n    _jsxDEV(HelperContext.Provider, {\n      value: {\n        categories,\n        setCategories,\n        getCategories,\n        ordersItems,\n        setOrdersItems,\n        newOrdersIndi,\n        setNewOrdersIndi,\n        mainLoader\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this)\n  );\n};","map":{"version":3,"sources":["D:/Programming/Tasleeha/contexts/HelperContext.js"],"names":["API","React","useState","useEffect","Axios","HelperContext","createContext","HelperContextProvider","children","categories","setCategories","product","service","all","mainLoader","setMainLoader","ordersItems","setOrdersItems","newOrdersIndi","setNewOrdersIndi","getCategories","values","baseURL","url","method","params","nested","subs","cat","data","map","c","type","parent_id","push","sub_categories","console","log","error","getOrders","res","newValues","oldVals","localStorage","getItem","JSON","parse","order","hasNullableProducts","Order_Products","Product","User","includes","id","new","setItem","stringify","initailize","response"],"mappings":"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","sourcesContent":["import { API } from \"helper/CONST\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\n// create new react context and export it\r\nconst HelperContext = React.createContext();\r\nexport default HelperContext;\r\n\r\nexport const HelperContextProvider = ({ children }) => {\r\n  // create new states\r\n  const [categories, setCategories] = useState({\r\n    product: [],\r\n    service: [],\r\n    all: [],\r\n  });\r\n  const [mainLoader, setMainLoader] = useState(false);\r\n  const [ordersItems, setOrdersItems] = useState([]);\r\n  const [newOrdersIndi, setNewOrdersIndi] = useState(false);\r\n\r\n  const getCategories = async (values = []) => {\r\n    try {\r\n      values = await Axios({\r\n        baseURL: API,\r\n        url: \"/api/categories/getAll\",\r\n        method: \"GET\",\r\n        params: { nested: \"1\" },\r\n      });\r\n      let all = [],\r\n        product = [],\r\n        service = [],\r\n        subs = [];\r\n      let cat = values.data.data.map((c) => {\r\n        if (c.type === \"product\" && c.parent_id) product.push(c);\r\n        else if (c.type === \"service\" && c.parent_id) service.push(c);\r\n        all.push(c);\r\n        subs.push(c.sub_categories);\r\n      });\r\n      console.log(all);\r\n      setCategories({ all, product, service, subs });\r\n      return { all, product, service };\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getOrders = async () => {\r\n    try {\r\n      const res = await Axios({\r\n        baseURL: API,\r\n        url: \"/api/orders/get\",\r\n        method: \"GET\",\r\n      });\r\n      let values = res.data.data;\r\n      let newValues = [];\r\n      let oldVals = localStorage.getItem(\"ordersIDs\")\r\n        ? JSON.parse(localStorage.getItem(\"ordersIDs\"))\r\n        : [];\r\n      values.map((order) => {\r\n        var hasNullableProducts = false;\r\n        order.Order_Products.map((product) => {\r\n          if (product.Product == null) hasNullableProducts = true;\r\n        });\r\n        if (hasNullableProducts == false && order.User != null) {\r\n          if (!oldVals.includes(order.id)) {\r\n            order.new = true;\r\n            oldVals.push(order.id);\r\n          }\r\n          newValues.push(order);\r\n        }\r\n      });\r\n      if (newValues[0].new) setNewOrdersIndi(true);\r\n      setOrdersItems([...newValues]);\r\n      localStorage.setItem(\"ordersIDs\", JSON.stringify(oldVals));\r\n    } catch (error) {}\r\n  };\r\n\r\n  const initailize = async () => {\r\n    setMainLoader(true);\r\n    try {\r\n      await getCategories();\r\n      await getOrders();\r\n      setMainLoader(false);\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    initailize();\r\n  }, []);\r\n\r\n  return (\r\n    // return provider of the context with value object to be used wih all children components\r\n    <HelperContext.Provider\r\n      value={{\r\n        categories,\r\n        setCategories,\r\n        getCategories,\r\n        ordersItems,\r\n        setOrdersItems,\r\n        newOrdersIndi,\r\n        setNewOrdersIndi,\r\n        mainLoader,\r\n      }}\r\n    >\r\n      {children}\r\n    </HelperContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}