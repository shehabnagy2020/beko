{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { API } from \"helper/CONST\";\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\"; // create new react context and export it\n\nconst HelperContext = /*#__PURE__*/React.createContext();\nexport default HelperContext;\nexport const HelperContextProvider = ({\n  children\n}) => {\n  // create new states\n  const {\n    0: categories,\n    1: setCategories\n  } = useState({\n    product: [],\n    service: [],\n    all: []\n  });\n\n  const getCategories = async (values = []) => {\n    try {\n      if (values.length <= 0) {\n        values = await Axios({\n          baseURL: API,\n          url: \"/api/categories/getAll\",\n          method: \"GET\"\n        });\n        values = values.data.data;\n      }\n\n      let all = [],\n          product = [],\n          service = [];\n      let cat = values.map(c => {\n        if (c.parent_id) all.push(c);\n        if (c.type === \"product\") product.push(c);else service.push(c);\n      });\n      setCategories({\n        all,\n        product,\n        service\n      });\n      return {\n        all,\n        product,\n        service\n      };\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getCategories();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // return provider of the context with value object to be used wih all children components\n    _jsx(HelperContext.Provider, {\n      value: {\n        categories,\n        setCategories,\n        getCategories\n      },\n      children: children\n    })\n  );\n};","map":null,"metadata":{},"sourceType":"module"}