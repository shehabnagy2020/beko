{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport NextCookies from \"next-cookies\";\nimport MainPageContainer from \"@/components/MainPageContainer\";\nimport SubCategoriesCard from \"@/components/PagesCards/SubCategoriesCard\";\nimport { SwitchTransition, CSSTransition } from \"react-transition-group\";\nimport { API, EMPTY_CATEGORIES } from \"helper/CONST\";\nimport Axios from \"axios\";\nimport HelperContext from \"@/contexts/HelperContext\";\nimport { useRouter } from \"next/router\";\n\nconst EditCategories = () => {\n  const {\n    categories,\n    setCategories,\n    getCategories\n  } = useContext(HelperContext);\n  const {\n    0: loader,\n    1: setLoader\n  } = useState({\n    edit: false,\n    delete: false,\n    page: false\n  });\n  const {\n    0: activeItem,\n    1: setActiveItem\n  } = useState({\n    id: \"\"\n  });\n  const router = useRouter();\n  const {\n    itemID\n  } = router.query;\n\n  const handelLoader = (id, val) => {\n    setLoader(_objectSpread(_objectSpread({}, loader), {}, {\n      [id]: val\n    }));\n  };\n\n  const getData = async () => {\n    var _categories$subs;\n\n    if (((_categories$subs = categories.subs) === null || _categories$subs === void 0 ? void 0 : _categories$subs.length) >= 1) {\n      let [item] = categories.subs.filter(i => i.id == itemID);\n      if (item) setActiveItem(_objectSpread({}, item));\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [itemID, categories]);\n\n  const handleEdit = async info => {\n    handelLoader(\"edit\", true);\n\n    try {\n      const res = await Axios({\n        baseURL: API,\n        url: \"/api/categories/edit\",\n        method: \"POST\",\n        data: info\n      });\n      await getCategories();\n      router.push(\"/sub-categories\");\n    } catch (error) {\n      var _error$response;\n\n      console.log((_error$response = error.response) !== null && _error$response !== void 0 ? _error$response : error);\n      alert(\"فشل تعديل الفئه\");\n    }\n\n    handelLoader(\"edit\", false);\n  };\n\n  return /*#__PURE__*/_jsx(MainPageContainer, {\n    className: \"\",\n    title: \"\\u0627\\u0644\\u0641\\u0626\\u0627\\u062A\",\n    addLink: \"/categories/add\",\n    children: loader.page ? /*#__PURE__*/_jsx(\"div\", {\n      className: \"flex justify-center items-center\",\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: \"material-icons text-6xl text-primary animate-spin\",\n        children: \"track_changes\"\n      })\n    }) : /*#__PURE__*/_jsx(SwitchTransition, {\n      children: /*#__PURE__*/_jsx(CSSTransition, {\n        classNames: \"fade\",\n        appear: true,\n        timeout: 300,\n        unmountOnExit: true,\n        exit: true,\n        children: /*#__PURE__*/_jsx(_Fragment, {\n          children: /*#__PURE__*/_jsx(SubCategoriesCard, {\n            item: activeItem,\n            handleEdit: handleEdit,\n            loader: loader\n          })\n        })\n      }, activeItem.id)\n    })\n  });\n};\n\nexport default EditCategories;\nexport const getServerSideProps = ctx => {\n  const {\n    user\n  } = NextCookies(ctx);\n\n  if (!user && ctx.res) {\n    ctx.res.writeHead(301, {\n      location: \"/login\"\n    });\n    ctx.res.end();\n  }\n\n  return {\n    props: {}\n  };\n};","map":null,"metadata":{},"sourceType":"module"}